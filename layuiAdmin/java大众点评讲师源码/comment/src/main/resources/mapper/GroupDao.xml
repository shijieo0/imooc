<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.imooc.dao.GroupDao">
	
	
	<resultMap type="Group" id="GroupResultMap">
		<id column="id" property="id" />
		<id column="name" property="name" />
		
		<!-- 特意将两种写法放在一起,大家自己做个比对,一个是自己内部配置对应关系,而另一种,就是封装与引用的体现,不用到处引用的地方自己配：
		                 这里的ActionResultMap在本系统中有两处引用(一个是MenuDao里，一个是这里),所以我把它配置到ActionDao中，然后两处对这个ResultMap引用,
		                 但是要注意列名冲突,这里menuList里的menu_id与Action中的menu_id是不一样的，详细见【selectMenuListById】这条SQL语句，如果觉得这样混在一起非常难以理解，可以自己拆成两条SQL语句，我这里是为了省事 -->
		<collection property="menuList" javaType="list" ofType="Menu">
			<result column="menu_id" property="id"/>
			<result column="menu_name" property="name"/>
			<result column="url" property="url"/>
			<result column="parent_id" property="parentId"/>
			<result column="order_num" property="orderNum"/>
		</collection>
		<collection property="actionList" javaType="list" resultMap="org.imooc.dao.ActionDao.ActionResultMap"/>
		
		
	</resultMap>

	<select id="select" resultType="Group">
		select id,name from sys_group t
		<where>
			<if test="name != null">
				and t.name = #{name}
			</if>
		</where>
		order by convert(name using gbk) collate gbk_chinese_ci
	</select>
	
	<insert id="insert">
		insert into sys_group(name)
		select #{name} from dual where not exists(select 1 from sys_group where name=#{name})
	</insert>
	
	<select id="selectById" resultType="Group">
		select id,name from sys_group where id = #{_parameter}
	</select>
	
	<update id="update">
		update sys_group
		<set>
			<if test="name != null">
				name = #{name},
			</if>
		</set>
		where id=#{id} and not exists(select 1 from(select 1 from sys_group where name=#{name} and id != #{id})a)
	</update>
	
	<delete id="delete">
		delete from sys_group where id=#{_parameter}
	</delete>
	
	<select id="selectMenuListById" resultMap="GroupResultMap">
		select g.id,g.name,m.id menu_id,m.name menu_name,m.url,m.parent_id,m.order_num,a.name action_name
		,a.id action_id,a.url action_url,a.menu_id action_menu_id,a.method
		from sys_group g
		left join sys_group_menu gm on g.id = gm.group_id
		left join sys_menu m on gm.menu_id = m.id
		left join sys_group_action ga on g.id = ga.group_id
		left join sys_action a on ga.action_id = a.id
		where g.id = #{_parameter}
		order by m.order_num
	</select>
</mapper>